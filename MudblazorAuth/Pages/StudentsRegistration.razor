@page "/studentRegistration"

@using DataAccess
@using MudblazorAuth.Models
@inject IMySQLDataAccess _data
@inject IConfiguration _config
@inject NavigationManager UriHelper


<EditForm Model="@newStudent" OnValidSubmit="@SubmitPersonalDetails">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="6" md="5">
            <MudCard>
                <MudCardContent>
                    @*personal_details Table*@
                    <MudTextField Label="PPS Number" HelperText="Max 8 caracters" @bind-Value="newStudent.personalDetails.PPSN" For="@(() => newStudent.personalDetails.PPSN)" />
                    <MudTextField Label="First Name" HelperText=" " @bind-Value="newStudent.personalDetails.FirstName" For="@(() => newStudent.personalDetails.FirstName)" />
                    <MudTextField Label="Surname" HelperText=" " @bind-Value="newStudent.personalDetails.Surname" For="@(() => newStudent.personalDetails.Surname)" />
                    <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Date of Birth" @bind-Date="newStudent.personalDetails.DoB" DateFormat="dd/MM/yyyy"/>

                    <MudSelect T="string" Label="Gender" @bind-Value="newStudent.personalDetails.Gender" For="@(() => newStudent.personalDetails.Gender)">
                        <MudSelectItem Value="@("Female")" />
                        <MudSelectItem Value="@("Male")" />
                        <MudSelectItem Value="@("Other")" />
                        <MudSelectItem Value="@("Refuse Answer")" />
                    </MudSelect>
                    <MudTextField Label="Address" HelperText=" " @bind-Value="newStudent.personalDetails.Address1" For="@(() => newStudent.personalDetails.Address1)" />
                    <MudTextField Label="Address" HelperText=" " @bind-Value="newStudent.personalDetails.Address2" For="@(() => newStudent.personalDetails.Address2)" />
                    <MudTextField Label="EirCode" HelperText=" " @bind-Value="newStudent.personalDetails.EirCode" For="@(() => newStudent.personalDetails.EirCode)" />
                    <MudTextField Label="City" HelperText=" " @bind-Value="newStudent.personalDetails.City" For="@(() => newStudent.personalDetails.City)" />
                    <MudTextField Label="Phone Number" HelperText=" " @bind-Value="newStudent.personalDetails.PhoneNumber" For="@(() => newStudent.personalDetails.PhoneNumber)" />
                    <MudTextField Label="Mobile Number" HelperText=" " @bind-Value="newStudent.personalDetails.MobileNumber" For="@(() => newStudent.personalDetails.MobileNumber)" />
                    <MudTextField Label="E-Mail" HelperText=" " @bind-Value="newStudent.personalDetails.EmailAddress" For="@(() => newStudent.personalDetails.EmailAddress)" />
                    @*student Table*@
                    <MudTextField Label="Education Level" HelperText=" " @bind-Value="newStudent.studentModel.EducationLevel" For="@(() => newStudent.studentModel.EducationLevel)" />
                    <MudTextField Label="ReferralSource" HelperText=" " @bind-Value="newStudent.studentModel.ReferralSource" For="@(() => newStudent.studentModel.ReferralSource)" />
                    <MudCheckBox Label="Interview" @bind-Value="@newStudent.studentModel.Interview" For="@(() => newStudent.studentModel.Interview)"></MudCheckBox>
                    <MudCheckBox Label="Place Offered" @bind-Value="@newStudent.studentModel.PlaceOffered" For="@(() => newStudent.studentModel.PlaceOffered)"></MudCheckBox>
                    <MudCheckBox Label="Place Acepted" @bind-Value="@newStudent.studentModel.PlaceAccepted" For="@(() => newStudent.studentModel.PlaceAccepted)"></MudCheckBox>
                    <MudCheckBox Label="Registred With Ballymun Job Centre" @bind-CheValuecked="@newStudent.studentModel.RegistredWithBLJC" For="@(() => newStudent.studentModel.RegistredWithBLJC)"></MudCheckBox>
                    <MudCheckBox Label="Guidance Officer" @bind-Value="@newStudent.studentModel.GuidanceOfficer" For="@(() => newStudent.studentModel.GuidanceOfficer)"></MudCheckBox>
                    <MudCheckBox Label="Engaged With Other Agencies" @bind-Value="@newStudent.studentModel.EngagedWithOtherAgencies" For="@(() => newStudent.studentModel.EngagedWithOtherAgencies)"></MudCheckBox>
                    <MudCheckBox Label="Responsibilities" @bind-Value="@newStudent.studentModel.Responsibilities" For="@(() => newStudent.studentModel.Responsibilities)"></MudCheckBox>
                    <MudCheckBox Label="Photo Consent" @bind-Value="@newStudent.studentModel.PhotoConsent" For="@(() => newStudent.studentModel.PhotoConsent)"></MudCheckBox>
                    <MudCheckBox Label="Data Consent" @bind-Value="@newStudent.studentModel.DataConsent" For="@(() => newStudent.studentModel.DataConsent)"></MudCheckBox>
                    <MudCheckBox Label="Personal Property Consent" @bind-Value="@newStudent.studentModel.PersonalPropertyConsent" For="@(() => newStudent.studentModel.PersonalPropertyConsent)"></MudCheckBox>
                    <MudCheckBox Label="StudFiciResnNotes" @bind-Value="@newStudent.studentModel.StudFiciResn" For="@(() => newStudent.studentModel.StudFiciResn)"></MudCheckBox>
                    <MudTextField Label="Notes" HelperText=" " @bind-Value="newStudent.studentModel.Notes" For="@(() => newStudent.studentModel.Notes)" />
                </MudCardContent>

                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Submit</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>



@code {
    //private StudentModel newStudent = new StudentModel();
    //private PersonalDetailsModel personalDetailsModel = new PersonalDetailsModel();

    private StudentDetailsModel newStudent = new StudentDetailsModel();
    //StudentModel student = new StudentModel();

    bool studentActivity = true;
    bool studentPhotoConsent = true;


    private async Task SubmitPersonalDetails()
    {

        string sqlInsertPersonalDetails = "INSERT INTO personal_details (PPSN, FirstName, Surname, DoB, Gender, Address1, Address2, EirCode, City, PhoneNumber, MobileNumber, EmailAddress)" +
            "VALUES (@PPSN, @FirstName, @Surname, @DoB, @Gender, @Address1, @Address2, @EirCode, @City, @PhoneNumber, @MobileNumber, @EmailAddress);";

        var personalDetailsId = await _data.CreateRecordReturnID(sqlInsertPersonalDetails, newStudent.personalDetails, _config.GetConnectionString("MySqlConnection"));
        Console.WriteLine(personalDetailsId);
        newStudent.studentModel.DetailsId = personalDetailsId;

        string sqlInsertStudent = "INSERT INTO students (DetailsId, EducationLevel, ReferralSource, Interview, PlaceOffered," +
               "PlaceAccepted, RegistredWithBLJC, GuidanceOfficer, EngagedWithOtherAgencies, Responsibilities," +
               "PhotoConsent, DataConsent, PersonalPropertyConsent, StudFiciResn, Notes)" +

               "VALUES (@DetailsId, @EducationLevel, @ReferralSource,@Interview, @PlaceOffered,@PlaceAccepted," +
               "@RegistredWithBLJC,@GuidanceOfficer, @EngagedWithOtherAgencies,@Responsibilities, @PhotoConsent," +
               "@DataConsent,@PersonalPropertyConsent, @StudFiciResn,@Notes);";

        await _data.SaveData(sqlInsertStudent, newStudent.studentModel, _config.GetConnectionString("MySqlConnection"));

        // now make a call to create your second record since the details id has been set for the foreign key
        // await SubmitStudent(personalDetailsId, newStudent.studentModel);
        newStudent = new StudentDetailsModel();
        //newDetails = new PersonalDetailsModel();
    }
}